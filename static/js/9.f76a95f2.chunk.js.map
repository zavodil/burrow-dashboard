{"version":3,"sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","assets/images/avatars/8.jpg","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js"],"names":["Dashboard","React","lazy","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","routes","path","exact","name","component","AppBreadcrumb","currentLocation","useLocation","pathname","getRouteName","find","route","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","memo","AppContent","burrowData","lg","fallback","color","idx","Object","keys","render","props","from","to","AppFooter","target","rel","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","onClick","type","icon","cilMenu","size","NavLink","activeClassName","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","Fragment","_nav","CNavItem","cilSpeedometer","customClassName","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","style","navigation","DocsCallout","content","plural","slice","_href","packageJson","config","coreui_library_short_version","DocsLink","DocsExample","children","variant","cilMediaPlay","cilCode","require","DefaultLayout","setBurrowData","useState","useEffect","async","console","log","process","fetch","headers","Accept","mode","then","response","ok","json","JSON","parse","LoadStats","fetchData","myJson"],"mappings":"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","file":"static/js/9.f76a95f2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', component: Dashboard },\n  { path: '/theme', name: 'Theme', component: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', component: Colors },\n  { path: '/theme/typography', name: 'Typography', component: Typography },\n  { path: '/base', name: 'Base', component: Cards, exact: true },\n  { path: '/base/accordion', name: 'Accordion', component: Accordion },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', component: Cards },\n  { path: '/base/carousels', name: 'Carousel', component: Carousels },\n  { path: '/base/collapses', name: 'Collapse', component: Collapses },\n  { path: '/base/list-groups', name: 'List Groups', component: ListGroups },\n  { path: '/base/navs', name: 'Navs', component: Navs },\n  { path: '/base/paginations', name: 'Paginations', component: Paginations },\n  { path: '/base/placeholders', name: 'Placeholders', component: Placeholders },\n  { path: '/base/popovers', name: 'Popovers', component: Popovers },\n  { path: '/base/progress', name: 'Progress', component: Progress },\n  { path: '/base/spinners', name: 'Spinners', component: Spinners },\n  { path: '/base/tables', name: 'Tables', component: Tables },\n  { path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\n  { path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', component: Buttons },\n  { path: '/buttons/dropdowns', name: 'Dropdowns', component: Dropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\n  { path: '/charts', name: 'Charts', component: Charts },\n  { path: '/forms', name: 'Forms', component: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', component: FormControl },\n  { path: '/forms/select', name: 'Select', component: Select },\n  { path: '/forms/checks-radios', name: 'Checks & Radios', component: ChecksRadios },\n  { path: '/forms/range', name: 'Range', component: Range },\n  { path: '/forms/input-group', name: 'Input Group', component: InputGroup },\n  { path: '/forms/floating-labels', name: 'Floating Labels', component: FloatingLabels },\n  { path: '/forms/layout', name: 'Layout', component: Layout },\n  { path: '/forms/validation', name: 'Validation', component: Validation },\n  { path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', component: Flags },\n  { path: '/icons/brands', name: 'Brands', component: Brands },\n  { path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', component: Alerts },\n  { path: '/notifications/badges', name: 'Badges', component: Badges },\n  { path: '/notifications/modals', name: 'Modals', component: Modals },\n  { path: '/notifications/toasts', name: 'Toasts', component: Toasts },\n  { path: '/widgets', name: 'Widgets', component: Widgets },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute.name\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      breadcrumbs.push({\n        pathname: currentPathname,\n        name: getRouteName(currentPathname, routes),\n        active: index + 1 === array.length ? true : false,\n      })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = (burrowData) => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Switch>\n          {routes.map((route, idx) => {\n            if (!Object.keys(burrowData).length)\n              return (\n                <div className=\"pt-3 text-center\">\n                  <div className=\"sk-spinner sk-spinner-pulse\" />\n                </div>\n              )\n            else {\n              return (\n                route.component && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={(props) => {\n                      if (burrowData) {\n                        props.burrowData = burrowData\n                      }\n                      return (\n                        <>\n                          <route.component {...props} />\n                        </>\n                      )\n                    }}\n                  />\n                )\n              )\n            }\n          })}\n          <Redirect from=\"/\" to=\"/dashboard\" />\n        </Switch>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        &copy;{' '}\n        <a href=\"https://burrow.cash\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Burrow Cash\n        </a>\n        <span className=\"ms-1\">Dashboard</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://near.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          NEAR Protocol\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","export default __webpack_public_path__ + \"static/media/8.35ee8919.jpg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          {/*<CIcon icon={logo} height={48} alt=\"Logo\" />*/}\n          Burrow Cash\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink} activeClassName=\"active\">\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/*\n          <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem>\n          */}\n        </CHeaderNav>\n        <CHeaderNav>\n          {/*\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          {/*\n          <AppHeaderDropdown />\n          */}\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n            activeClassName: 'active',\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilSpeedometer,\n  /*cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilStar,*/\n} from '@coreui/icons'\nimport { CNavItem /*, CNavGroup, CNavTitle */ } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n  /*\n  {\n    component: CNavTitle,\n    name: 'Theme',\n  },\n  {\n    component: CNavItem,\n    name: 'Colors',\n    to: '/theme/colors',\n    icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Typography',\n    to: '/theme/typography',\n    icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Components',\n  },\n  {\n    component: CNavGroup,\n    name: 'Base',\n    to: '/base',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Accordion',\n        to: '/base/accordion',\n      },\n      {\n        component: CNavItem,\n        name: 'Breadcrumb',\n        to: '/base/breadcrumbs',\n      },\n      {\n        component: CNavItem,\n        name: 'Cards',\n        to: '/base/cards',\n      },\n      {\n        component: CNavItem,\n        name: 'Carousel',\n        to: '/base/carousels',\n      },\n      {\n        component: CNavItem,\n        name: 'Collapse',\n        to: '/base/collapses',\n      },\n      {\n        component: CNavItem,\n        name: 'List group',\n        to: '/base/list-groups',\n      },\n      {\n        component: CNavItem,\n        name: 'Navs & Tabs',\n        to: '/base/navs',\n      },\n      {\n        component: CNavItem,\n        name: 'Pagination',\n        to: '/base/paginations',\n      },\n      {\n        component: CNavItem,\n        name: 'Placeholders',\n        to: '/base/placeholders',\n      },\n      {\n        component: CNavItem,\n        name: 'Popovers',\n        to: '/base/popovers',\n      },\n      {\n        component: CNavItem,\n        name: 'Progress',\n        to: '/base/progress',\n      },\n      {\n        component: CNavItem,\n        name: 'Spinners',\n        to: '/base/spinners',\n      },\n      {\n        component: CNavItem,\n        name: 'Tables',\n        to: '/base/tables',\n      },\n      {\n        component: CNavItem,\n        name: 'Tooltips',\n        to: '/base/tooltips',\n      },\n    ],\n  },\n  {\n    component: CNavGroup,\n    name: 'Buttons',\n    to: '/buttons',\n    icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Buttons',\n        to: '/buttons/buttons',\n      },\n      {\n        component: CNavItem,\n        name: 'Buttons groups',\n        to: '/buttons/button-groups',\n      },\n      {\n        component: CNavItem,\n        name: 'Dropdowns',\n        to: '/buttons/dropdowns',\n      },\n    ],\n  },\n  {\n    component: CNavGroup,\n    name: 'Forms',\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Form Control',\n        to: '/forms/form-control',\n      },\n      {\n        component: CNavItem,\n        name: 'Select',\n        to: '/forms/select',\n      },\n      {\n        component: CNavItem,\n        name: 'Checks & Radios',\n        to: '/forms/checks-radios',\n      },\n      {\n        component: CNavItem,\n        name: 'Range',\n        to: '/forms/range',\n      },\n      {\n        component: CNavItem,\n        name: 'Input Group',\n        to: '/forms/input-group',\n      },\n      {\n        component: CNavItem,\n        name: 'Floating Labels',\n        to: '/forms/floating-labels',\n      },\n      {\n        component: CNavItem,\n        name: 'Layout',\n        to: '/forms/layout',\n      },\n      {\n        component: CNavItem,\n        name: 'Validation',\n        to: '/forms/validation',\n      },\n    ],\n  },\n  {\n    component: CNavItem,\n    name: 'Charts',\n    to: '/charts',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavGroup,\n    name: 'Icons',\n    icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'CoreUI Free',\n        to: '/icons/coreui-icons',\n        badge: {\n          color: 'success',\n          text: 'NEW',\n        },\n      },\n      {\n        component: CNavItem,\n        name: 'CoreUI Flags',\n        to: '/icons/flags',\n      },\n      {\n        component: CNavItem,\n        name: 'CoreUI Brands',\n        to: '/icons/brands',\n      },\n    ],\n  },\n  {\n    component: CNavGroup,\n    name: 'Notifications',\n    icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Alerts',\n        to: '/notifications/alerts',\n      },\n      {\n        component: CNavItem,\n        name: 'Badges',\n        to: '/notifications/badges',\n      },\n      {\n        component: CNavItem,\n        name: 'Modal',\n        to: '/notifications/modals',\n      },\n      {\n        component: CNavItem,\n        name: 'Toasts',\n        to: '/notifications/toasts',\n      },\n    ],\n  },\n  {\n    component: CNavItem,\n    name: 'Widgets',\n    to: '/widgets',\n    icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n      text: 'NEW',\n    },\n  },\n  {\n    component: CNavTitle,\n    name: 'Extras',\n  },\n  {\n    component: CNavGroup,\n    name: 'Pages',\n    icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Login',\n        to: '/login',\n      },\n      {\n        component: CNavItem,\n        name: 'Register',\n        to: '/register',\n      },\n      {\n        component: CNavItem,\n        name: 'Error 404',\n        to: '/404',\n      },\n      {\n        component: CNavItem,\n        name: 'Error 500',\n        to: '/500',\n      },\n    ],\n  },\n   */\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CLink, CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"https://burrow.cash\">\n        {/*\n        <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n        */}\n        <CLink className=\"link small\" href=\"https://burrow.cash\" style={{ color: '#FFF' }}>\n          Burrow Cash\n        </CLink>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nimport packageJson from '../../package.json'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppFooter, AppHeader, AppSidebar } from '../components/index'\nrequire('dotenv').config()\n\nconst DefaultLayout = () => {\n  const [burrowData, setBurrowData] = React.useState({})\n\n  const LoadStats = async () => {\n    console.log(`Loading ${process.env.REACT_APP_STATS_JSON}`)\n    return await fetch(process.env.REACT_APP_STATS_JSON, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      mode: 'no-cors',\n    }).then((response) => {\n      if (!response.ok) {\n        return JSON.parse(`{}`)\n      }\n      return response.json()\n    })\n  }\n\n  React.useEffect(() => {\n    async function fetchData() {\n      return await LoadStats()\n    }\n    fetchData().then((myJson) => setBurrowData(myJson))\n  }, [])\n\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent {...burrowData} />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"sourceRoot":""}