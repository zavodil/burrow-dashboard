{"version":3,"sources":["views/forms/range/Range.js"],"names":["Range","xs","name","href","className","htmlFor","id","disabled","min","max","defaultValue","step"],"mappings":"6KAAA,0CAoFeA,UAhFD,IAEV,eAAC,KAAD,WACE,cAAC,IAAD,CAAMC,GAAI,GAAV,SACE,cAAC,IAAD,CAAaC,KAAK,QAAQC,KAAK,kBAEjC,cAAC,IAAD,CAAMF,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,6BAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,2BACgB,wDADhB,iBAC8E,IAC5E,gDAFF,OAIA,eAAC,IAAD,CAAaD,KAAK,cAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CAAYC,GAAG,4BAKvB,cAAC,IAAD,CAAML,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,gDAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,qBACU,4CADV,kGAIA,eAAC,IAAD,CAAaD,KAAK,uBAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,gBAApB,4BACA,cAAC,IAAD,CAAYC,GAAG,gBAAgBC,UAAQ,eAK/C,cAAC,IAAD,CAAMN,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,mDAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,mDACwC,uCADxC,QAC6D,uCAD7D,SAEE,qCAFF,QAEqB,uCAFrB,kEAGkB,uCAHlB,QAGuC,uCAHvC,kBAKA,eAAC,IAAD,CAAaD,KAAK,0BAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CAAYG,IAAI,IAAIC,IAAI,IAAIC,aAAa,IAAIJ,GAAG,4BAKxD,cAAC,IAAD,CAAML,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,6CAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,kGAEY,wCAFZ,wEAGW,8CAHX,OAKA,eAAC,IAAD,CAAaD,KAAK,oBAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CAAYG,IAAI,IAAIC,IAAI,IAAIE,KAAK,MAAMD,aAAa,IAAIJ,GAAG","file":"static/js/42.b455fb14.chunk.js","sourcesContent":["import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CFormLabel, CFormRange, CRow } from '@coreui/react'\nimport { DocsCallout, DocsExample } from 'src/components'\n\nconst Range = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Range\" href=\"forms/range\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small></small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create custom <code>&lt;input type=&#34;range&#34;&gt;</code> controls with{' '}\n              <code>&lt;CFormRange&gt;</code>.\n            </p>\n            <DocsExample href=\"forms/range\">\n              <CFormLabel htmlFor=\"customRange1\">Example range</CFormLabel>\n              <CFormRange id=\"customRange1\" />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Disabled</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> boolean attribute on an input to give it a grayed out\n              appearance and remove pointer events.\n            </p>\n            <DocsExample href=\"forms/range#disabled\">\n              <CFormLabel htmlFor=\"disabledRange\">Disabled range</CFormLabel>\n              <CFormRange id=\"disabledRange\" disabled />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Min and max</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Range inputs have implicit values for <code>min</code> and <code>max</code>â€”\n              <code>0</code> and <code>100</code>, respectively. You may specify new values for\n              those using the <code>min</code> and <code>max</code> attributes.\n            </p>\n            <DocsExample href=\"forms/range#min-and-max\">\n              <CFormLabel htmlFor=\"customRange2\">Example range</CFormLabel>\n              <CFormRange min=\"0\" max=\"5\" defaultValue=\"3\" id=\"customRange2\" />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Steps</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, range inputs &#34;snap&#34; to integer values. To change this, you can\n              specify a <code>step</code> value. In the example below, we double the number of steps\n              by using <code>step=&#34;0.5&#34;</code>.\n            </p>\n            <DocsExample href=\"forms/range#steps\">\n              <CFormLabel htmlFor=\"customRange3\">Example range</CFormLabel>\n              <CFormRange min=\"0\" max=\"5\" step=\"0.5\" defaultValue=\"3\" id=\"customRange3\" />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Range\n"],"sourceRoot":""}